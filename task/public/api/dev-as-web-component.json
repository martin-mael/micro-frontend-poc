[
    {
        "name": "Create a vite web component plugin for DX",
        "description": "First, create following files into **src/plugins/webComponentPlugin**:\n### wc.html.tpl\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"icon\" type=\"image/svg+xml\" href=\"/vite.svg\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Test Web Component</title>\n  </head>\n  <body>\n    {{webComponent}}\n    <script type=\"module\" src=\"{{script}}\"></script>\n  </body>\n</html>\n```\n### index.ts\n```typescript\nimport webcomponentPlugin from \"./webComponentPlugin\";\n\nexport default webcomponentPlugin;\n```\n### webComponentPlugin.ts\n```typescript\nimport path from \"path\";\nimport fs from \"fs\";\nimport type { ViteDevServer } from \"vite\";\nimport { Plugin } from \"vite\";\n\nconst webcomponentMiddleWare = (server: ViteDevServer, options: Options) => {\n  server.middlewares.use((req, res, next) => {\n    if (req.url === \"/index.html\") {\n      const filePath = path.join(__dirname, \"wc.html.tpl\");\n      fs.readFile(filePath, (err, data) => {\n        if (err) {\n          next(err);\n        } else {\n          const htmlContent = data.toString()\n            .replace(\"{{script}}\", options.script)\n            .replace(\"{{webComponent}}\", options.webComponent);\n          res.setHeader(\"Content-Type\", \"text/html\");\n          res.end(htmlContent);\n        }\n      });\n    } else {\n      next();\n    }\n  });\n};\n\ntype Options = {\n    /**\n     * Name of the web component script file to load. Eg: /src/TaskWebComponent.tsx\n     */\n    script: string;\n\n    /**\n     * Web component to inject Eg: <task-web-component attribute1=\"val1\" attribute2=\"val2\"></task-web-component>\n     */\n    webComponent: string;\n};\n\nconst webcomponentPlugin = (_options: Options): Plugin => {\n  return {\n    name: \"serve-web-component\",\n    configureServer(server: ViteDevServer) {\n        return () => {\n        return webcomponentMiddleWare(server, _options);\n        };\n    },\n  }\n};\n\nexport default webcomponentPlugin;\n```",
        "done": true
    },
    {
        "name": "use the vite web component plugin",
        "description": "```typescript\nimport { defineConfig, UserConfig } from 'vite';\nimport react from '@vitejs/plugin-react-swc';\nimport webcomponentPlugin from './src/plugins/webComponentPlugin';\n\nconst WEB_COMPONENT_CONFIG = {\n  script: '/src/TaskWebComponent.tsx',\n  webComponent: '<task-web-component route-basename=\"/\" api-baseurl=\"http://localhost:5173/api\"></task-web-component>'\n};\n\nconst getWebComponentConfig = (): Partial<UserConfig> => ({\n  plugins: [\n    webcomponentPlugin(WEB_COMPONENT_CONFIG),\n  ],\n  build: {\n    lib: {\n      entry: 'src/TaskWebComponent.tsx',\n      formats: ['es'],\n      fileName: 'task-web-component'\n    },\n    minify: 'esbuild',\n    sourcemap: true,\n    rollupOptions: {\n      output: {\n        inlineDynamicImports: false,\n        manualChunks: {\n          'react-vendor': ['react', 'react-dom'],\n          'router-vendor': ['react-router-dom'],\n          'markdown': ['react-markdown', 'rehype-highlight', 'remark-gfm']\n        }\n      }\n    }\n  }\n});\n\nconst getReactConfig = (): Partial<UserConfig> => ({\n  plugins: [\n    react(),\n  ]\n});\n\nexport default defineConfig(({ mode }) => ({\n  plugins: mode === 'web-component' \n    ? getWebComponentConfig().plugins \n    : getReactConfig().plugins,\n  define: {\n    'process.env': {\n      NODE_ENV: JSON.stringify(process.env.NODE_ENV || 'production')\n    }\n  },\n  build: mode === 'web-component' \n    ? getWebComponentConfig().build \n    : undefined,\n  server: {\n    open: true,\n  }\n}));\n```",
        "done": true
    },
    {
        "name": "Add scripts to build the web component app",
        "description": "In package.json\n\n```json\n{\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"dev:wc\": \"vite --mode web-component\",\n    \"build\": \"tsc && vite build\",\n    \"build:wc\": \"tsc && vite build --mode web-component\",\n    \"preview\": \"vite preview\",\n    \"preview:wc\": \"vite preview --mode web-component\"\n  }\n}\n```\nThen, ensure every script is working as expected.",
        "done": true
    }
]